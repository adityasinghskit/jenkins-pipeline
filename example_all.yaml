# This is a sample file for creating a deployment and service in kubernetes
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: example
  namespace: example-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: example
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: example
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: release
        - name: HIWIPAY_DB_USER
          valueFrom:
            secretKeyRef:
              key: spring.datasource.username
              name: hiwipay-db
        - name: HIWIPAY_DB_PASSWD
          valueFrom:
            secretKeyRef:
              key: spring.datasource.password
              name: hiwipay-db
        image: hiwipayad2prodacr.azurecr.io/hiwipayad2prodacr/prod_user_svc:latest
        imagePullPolicy: Always
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - kubectl logs $(hostname) > /var/log/example/example-service/$(date +%s)_$(hostname).log
        name: example
        ports:
        - containerPort: 8010
          protocol: TCP
        resources:
          limits:
            cpu: 512m
            memory: 1500Mi
          requests:
            cpu: 300m
            memory: 1024Mi
      dnsPolicy: ClusterFirst
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    nginx.ingress.kubernetes.io/enable-cors: "true"
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
  name: example
  namespace: example-ns
spec:
  ports:
  - port: 8010
  selector:
    app.kubernetes.io/name: example
  type: LoadBalancer